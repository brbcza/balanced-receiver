name: Run PCB tests

on:
  push:
    branches:
        - '**'
    paths: 
        - '*.kicad_pro'
        - '*.kicad_sch'
        - '*.kicad_pcb'
        - 'libs/**'
        - '.github/workflows/pipeline.yml'
  pull_request:
    branches: 
        - '**' 

jobs:
  run-erc:
    runs-on: ubuntu-latest
    name: Electrical Rule Check
    env:
      OUTPUT_DIR: outputs
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Modify title block
        env:
          TITLE_BLOCK_AUTHOR: ${{ vars.PROJECT_AUTHOR }}
          TITLE_BLOCK_REVISION: ${{ github.sha }}
          TITLE_BLOCK_BASE_REPOSITORY: github.com/${{ github.repository_owner }}
          TITLE_BLOCK_REPOSITORY: ${{ github.server_url }}/${{github.repository}}
          TITLE_BLOCK_PROJECT_NAME: ${{ vars.PROJECT_NAME }}
          TITLE_BLOCK_PROJECT_NAME_SHORT: ${{ vars.PROJECT_NAME_SHORT }}
        run: |
          TITLE_BLOCK_DATE=$(date +'%Y.%m.%d') \
            python3 scripts/update_title_block.py 

      - name: Run tests
        run: |
          mkdir -p ${OUTPUT_DIR}
          ERROR_DETECTED=0
          EXIT_CODE=0
          for BOARD_NAME in $(find . -type f -name "*.kicad_sch" | sed 's|^\./||'); do
              echo "Running ERC test for \"${BOARD_NAME}\""
              BOARD_NAME_BASE=${BOARD_NAME%.*}
              docker run -v $(pwd):/kikit --entrypoint kicad-cli yaqwsx/kikit \
                  sch erc --output "/kikit/${OUTPUT_DIR}/${BOARD_NAME_BASE}.rpt" \
                  --format report --exit-code-violations --severity-error \
                   "/kikit/${BOARD_NAME}" || EXIT_CODE=$?
              if [ $EXIT_CODE -ne 0 ]; then
                  echo "Error: ERC test failed for ${BOARD_NAME}"
                  cat "${OUTPUT_DIR}/${BOARD_NAME_BASE}.rpt"
                  ERROR_DETECTED=1
              fi
          done
          if [ $ERROR_DETECTED -ne 0 ]; then
            exit 1
          fi

      - name: Archive artifacts
        if: ${{ success() }} || ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: erc_tests
          path: ${{ env.OUTPUT_DIR }}
        
  run-drc:
    runs-on: ubuntu-latest
    name: Design Rule Check
    env:
      OUTPUT_DIR: outputs
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Modify title block
        env:
          TITLE_BLOCK_AUTHOR: ${{ vars.PROJECT_AUTHOR }}
          TITLE_BLOCK_REVISION: ${{ github.sha }}
          TITLE_BLOCK_BASE_REPOSITORY: github.com/${{ github.repository_owner }}
          TITLE_BLOCK_REPOSITORY: ${{ github.server_url }}/${{github.repository}}
          TITLE_BLOCK_PROJECT_NAME: ${{ vars.PROJECT_NAME }}
          TITLE_BLOCK_PROJECT_NAME_SHORT: ${{ vars.PROJECT_NAME_SHORT }}
        run: |
          TITLE_BLOCK_DATE=$(date +'%Y.%m.%d') \
            python3 scripts/update_title_block.py 

      - name: Run tests
        run: |
          mkdir -p ${OUTPUT_DIR}
          ERROR_DETECTED=0
          EXIT_CODE=0
          for BOARD_NAME in $(find . -type f -name "*.kicad_pcb" | sed 's|^\./||'); do
              echo "Running DRC test for \"${BOARD_NAME}\""
              BOARD_NAME_BASE=${BOARD_NAME%.*}
              docker run -v $(pwd):/kikit --entrypoint kicad-cli yaqwsx/kikit \
                  pcb drc --output "/kikit/${OUTPUT_DIR}/${BOARD_NAME_BASE}.rpt" \
                  --format report --schematic-parity --exit-code-violations --severity-error \
                  "/kikit/${BOARD_NAME}" || EXIT_CODE=$?
              if [ $EXIT_CODE -ne 0 ]; then
                  echo "Error: DRC test failed for ${BOARD_NAME}"
                  cat "${OUTPUT_DIR}/${BOARD_NAME_BASE}.rpt"
                  ERROR_DETECTED=1
              fi
          done
          if [ $ERROR_DETECTED -ne 0 ]; then
              exit 1
          fi

      - name: Archive artifacts
        if: ${{ success() }} || ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: drc_tests
          path: ${{ env.OUTPUT_DIR }}
        